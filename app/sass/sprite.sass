// SASS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home
//   width: $icon-home-width
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites
$task-01-name: 'task-01'
$task-01-x: 67px
$task-01-y: 0px
$task-01-offset-x: -67px
$task-01-offset-y: 0px
$task-01-width: 70px
$task-01-height: 43px
$task-01-total-width: 137px
$task-01-total-height: 93px
$task-01-image: '../img/sprite.png'
$task-01: (67px, 0px, -67px, 0px, 70px, 43px, 137px, 93px, '../img/sprite.png', 'task-01', )
$task-02-name: 'task-02'
$task-02-x: 0px
$task-02-y: 51px
$task-02-offset-x: 0px
$task-02-offset-y: -51px
$task-02-width: 71px
$task-02-height: 42px
$task-02-total-width: 137px
$task-02-total-height: 93px
$task-02-image: '../img/sprite.png'
$task-02: (0px, 51px, 0px, -51px, 71px, 42px, 137px, 93px, '../img/sprite.png', 'task-02', )
$task-03-name: 'task-03'
$task-03-x: 0px
$task-03-y: 0px
$task-03-offset-x: 0px
$task-03-offset-y: 0px
$task-03-width: 67px
$task-03-height: 51px
$task-03-total-width: 137px
$task-03-total-height: 93px
$task-03-image: '../img/sprite.png'
$task-03: (0px, 0px, 0px, 0px, 67px, 51px, 137px, 93px, '../img/sprite.png', 'task-03', )
$spritesheet-width: 137px
$spritesheet-height: 93px
$spritesheet-image: '../img/sprite.png'
$spritesheet-sprites: ($task-01, $task-02, $task-03, )
$spritesheet: (137px, 93px, '../img/sprite.png', $spritesheet-sprites, )

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home
//   @include sprite-width($icon-home)
//
// .icon-email
//   @include sprite($icon-email)
//
// Example usage in HTML:
//   `display: block` sprite:
//   <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//   // CSS
//   .icon {
//     display: inline-block;
//   }
//
//   // HTML
//   <i class="icon icon-home"></i>
@mixin sprite-width($sprite)
  width: nth($sprite, 5)

@mixin sprite-height($sprite)
  height: nth($sprite, 6)

@mixin sprite-position($sprite)
  $sprite-offset-x: nth($sprite, 3)
  $sprite-offset-y: nth($sprite, 4)
  background-position: $sprite-offset-x  $sprite-offset-y

@mixin sprite-image($sprite)
  $sprite-image: nth($sprite, 9)
  background-image: url(#{$sprite-image})

@mixin sprite($sprite)
  @include sprite-image($sprite)
  @include sprite-position($sprite)
  @include sprite-width($sprite)
  @include sprite-height($sprite)

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SASS
//
// @include sprites($spritesheet-sprites)
@mixin sprites($sprites)
  @each $sprite in $sprites
    $sprite-name: nth($sprite, 10)
    .#{$sprite-name}
      @include sprite($sprite)
